/* SQL code for the exploration of the Covid Database from our world in data.
Link to Dataset: https://ourworldindata.org/covid-deaths
*/

--SELECT *
 --FROM `covid-341601.Covid.CovidDeaths` 
 --order by 3,4

 --Exploritory Data

 SELECT location, date, total_cases, new_cases, total_deaths, population
 FROM `covid-341601.Covid.CovidDeaths` 
 order by 1,2

--  mortality rate (total cases/total deaths)

 SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as MortalityRate
 FROM `covid-341601.Covid.CovidDeaths` 
 where location like '%States%'
 order by 1,2



-- total cases/population


 SELECT location, date, total_cases, population, (total_cases/population)*100 as InfectionPercentage
 FROM `covid-341601.Covid.CovidDeaths` 
 --where location like 'United States'
 order by 1,2



-- Countries with highest infection rate

SELECT location, MAX(cast(total_cases as int)) as InfectionCount, population, MAX((total_cases/population))*100 as InfectionPercentage
 FROM `covid-341601.Covid.CovidDeaths` 
 --where location like 'United States'
 GROUP BY location, population
 order by InfectionPercentage desc 




-- Countries with highest mortality rate

SELECT location, MAX(cast(total_deaths as int)) as TotalDeaths
 FROM `covid-341601.Covid.CovidDeaths` 
 where continent is not null -- to see additional data remove "not"
 GROUP BY location
 order by TotalDeaths desc 



-- Global numbers


 SELECT date, SUM(new_cases) as Cases, SUM(cast(new_deaths as int)) as Deaths, SUM(cast(new_deaths as int)) / SUM(new_cases)*100 as Percentage
 FROM `covid-341601.Covid.CovidDeaths` 
 where continent is not null 
GROUP BY date
 order by 1,2



--table join


SELECT *
 FROM `covid-341601.Covid.CovidDeaths` dea
JOIN `covid-341601.Covid.CovidVax` vax
    on dea.location = vax.location
    and dea.date = vax.date
where dea.continent is not null 
order by 2,3

--viewing total population & new vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vax.new_vaccinations,
SUM(cast(vax.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RunningTotal -- creates a running total column
    FROM `covid-341601.Covid.CovidDeaths` dea
    JOIN `covid-341601.Covid.CovidVax` vax --next lines give join columns
        on dea.location = vax.location
        and dea.date = vax.date
where dea.location is not null
order by 2,3

--creating CTE out of existing data.

WITH 
    CountryVaxLevel --AS (Continent, Location, Date, Population, New_vaccinations, RunningTotal)
AS
(
    SELECT dea.continent, dea.location, dea.date, dea.population, vax.new_vaccinations,
    SUM(cast(vax.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RunningTotal -- creates a running total column
        FROM `covid-341601.Covid.CovidDeaths` dea
        JOIN `covid-341601.Covid.CovidVax` vax --next lines give join columns
            on dea.location = vax.location
            and dea.date = vax.date
    where dea.continent is not null
)

SELECT *, (RunningTotal/Population)*100 as TotalVaxPercent
from CountryVaxLevel

--Temp table

DROP TABLE IF EXISTS CountryVaxLevel



/* not supported by Bigquery

create table CountryVaxLevel
(
    Continent nvarchar(255),
    Location nvarchar (255),
    Date datetime,
    Population numeric,
    New_vaccinations numeric,
    TotalVaxPercent numeric
)
insert into CountryVaxLevel

SELECT dea.continent, dea.location, dea.date, dea.population, vax.new_vaccinations,
    SUM(cast(vax.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RunningTotal -- creates a running total column
        FROM `covid-341601.Covid.CovidDeaths` dea
        JOIN `covid-341601.Covid.CovidVax` vax --next lines give join columns
            on dea.location = vax.location
            and dea.date = vax.date
    where dea.continent is not null


SELECT *, (RunningTotal/Population)*100 as TotalVaxPercent
from CountryVaxLevel


*/
--createing view for later viz

CREATE VIEW CountryVaxLevel as
WITH 
    CountryVaxLevel --AS (Continent, Location, Date, Population, New_vaccinations, RunningTotal)
AS
(
    SELECT dea.continent, dea.location, dea.date, dea.population, vax.new_vaccinations,
    SUM(cast(vax.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RunningTotal -- creates a running total column
        FROM `covid-341601.Covid.CovidDeaths` dea
        JOIN `covid-341601.Covid.CovidVax` vax --next lines give join columns
            on dea.location = vax.location
            and dea.date = vax.date
    where dea.continent is not null
)

SELECT *, (RunningTotal/Population)*100 as TotalVaxPercent
from CountryVaxLevel


order by 2,3







